---
globs: *.astro,*.js,*.ts
description: "Asset management, image optimization, and public file organization"
---

# Assets & Images Management

## 📁 Asset Organization Structure

### Directory Layout
```
public/
├── assets/
│   ├── cart/                    # Shopping cart product images
│   ├── checkout/               # Checkout page icons
│   ├── exported/              # Custom/processed images
│   ├── home/                  # Homepage hero images
│   │   ├── desktop/           # 1024px+ images
│   │   ├── mobile/            # <768px images
│   │   └── tablet/            # 768px-1024px images
│   ├── product-[name]/        # Product-specific images
│   │   ├── desktop/
│   │   ├── mobile/
│   │   └── tablet/
│   └── shared/                # Reusable assets (logos, icons)
│       ├── desktop/
│       ├── mobile/
│       └── tablet/
├── favicon.svg
└── favicon-32x32.png
```

### Asset Categories

#### Product Images
- **Product Photos**: `/assets/product-[slug]/[device]/image-product.jpg`
- **Category Previews**: `/assets/product-[slug]/[device]/image-category-page-preview.jpg`
- **Gallery Images**: `/assets/product-[slug]/[device]/image-gallery-[1-3].jpg`

#### Home Page Assets
- **Hero Images**: `/assets/home/[device]/image-hero.jpg`
- **Speaker Images**: `/assets/home/[device]/image-speaker-zx[7|9].jpg`
- **Earphone Images**: `/assets/home/[device]/image-earphones-yx1.jpg`
- **Patterns**: `/assets/home/desktop/pattern-circles.svg`

#### Shared Assets
- **Logo**: `/assets/shared/desktop/logo.svg`
- **Cart Icon**: `/assets/shared/desktop/icon-cart.svg`
- **Product Thumbnails**: `/assets/shared/[device]/image-[product-name].jpg`

## 🖼️ Responsive Image Implementation

### Standard Responsive Pattern
```astro
---
interface ResponsiveImageProps {
  mobile: string;
  tablet: string;
  desktop: string;
  alt: string;
  className?: string;
}

const { mobile, tablet, desktop, alt, className } = Astro.props;
---

<picture class={className}>
  <source media="(min-width: 1024px)" srcset={desktop}>
  <source media="(min-width: 768px)" srcset={tablet}>
  <img src={mobile} alt={alt} loading="lazy" />
</picture>
```

### Product Image Component
```astro
---
// Based on product data structure
interface ProductImageProps {
  product: {
    image: {
      mobile: string;
      tablet: string;
      desktop: string;
    };
    name: string;
  };
  className?: string;
}

const { product, className } = Astro.props;
---

<picture class={className}>
  <source 
    media="(min-width: 1024px)" 
    srcset={product.image.desktop}
  >
  <source 
    media="(min-width: 768px)" 
    srcset={product.image.tablet}
  >
  <img 
    src={product.image.mobile} 
    alt={product.name}
    loading="lazy"
  />
</picture>
```

### Background Image Patterns
From [index.astro](mdc:src/pages/index.astro):
```css
.hero {
  background-image: url("/assets/home/tablet/image-header.jpg");
  min-height: 700px;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
}

@media only screen and (min-width: 1024px) {
  .hero {
    background-image: url("/assets/home/desktop/image-hero.jpg");
    background-position-y: 50px;
    background-position-x: 150px;
  }
}
```

## 🎯 Image Optimization Guidelines

### File Formats
- **JPG**: Product photos, hero images, complex photography
- **PNG**: Images with transparency, simple graphics
- **SVG**: Icons, logos, simple illustrations
- **WebP/AVIF**: Modern formats for better compression (when supported)

### Responsive Breakpoints
- **Mobile**: 320px - 767px (optimize for 375px)
- **Tablet**: 768px - 1023px (optimize for 768px)
- **Desktop**: 1024px+ (optimize for 1440px)

### Image Sizing Recommendations
```
Mobile:   375px wide (1x), 750px wide (2x)
Tablet:   768px wide (1x), 1536px wide (2x)
Desktop:  1440px wide (1x), 2880px wide (2x)
```

## 📊 Data-Driven Asset Management

### Product Data Integration
Based on [dummyData.js](mdc:src/utils/dummyData.js):
```javascript
// Product image structure
const product = {
  image: {
    mobile: "/assets/product-xx59-headphones/mobile/image-product.jpg",
    tablet: "/assets/product-xx59-headphones/tablet/image-product.jpg", 
    desktop: "/assets/product-xx59-headphones/desktop/image-product.jpg"
  },
  gallery: {
    first: { mobile: "...", tablet: "...", desktop: "..." },
    second: { mobile: "...", tablet: "...", desktop: "..." },
    third: { mobile: "...", tablet: "...", desktop: "..." }
  }
};
```

### Dynamic Asset Loading
```astro
---
// Generate image paths dynamically
const getProductImage = (slug: string, type: 'product' | 'category' | 'gallery-1') => ({
  mobile: `/assets/product-${slug}/mobile/image-${type}.jpg`,
  tablet: `/assets/product-${slug}/tablet/image-${type}.jpg`,
  desktop: `/assets/product-${slug}/desktop/image-${type}.jpg`
});

const productImages = getProductImage('xx59-headphones', 'product');
---
```

## 🔧 Asset Loading Optimization

### Lazy Loading Strategy
```astro
<!-- Above-the-fold images -->
<img src={heroImage} alt="Hero" loading="eager" />

<!-- Below-the-fold images -->
<img src={productImage} alt="Product" loading="lazy" />

<!-- Background images with intersection observer -->
<div class="lazy-bg" data-bg={backgroundImage}>
```

### Preloading Critical Assets
```astro
---
// In Layout.astro head section
---
<head>
  <!-- Preload critical images -->
  <link rel="preload" as="image" href="/assets/shared/desktop/logo.svg">
  <link rel="preload" as="image" href="/assets/home/desktop/image-hero.jpg">
  
  <!-- Preload fonts -->
  <link rel="preload" as="font" href="/fonts/manrope.woff2" crossorigin>
</head>
```

### Image Component with Performance
```astro
---
interface OptimizedImageProps {
  src: string | { mobile: string; tablet: string; desktop: string };
  alt: string;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  className?: string;
}

const { src, alt, loading = 'lazy', priority = false, className } = Astro.props;

// Handle both single src and responsive object
const isResponsive = typeof src === 'object';
---

{isResponsive ? (
  <picture class={className}>
    <source media="(min-width: 1024px)" srcset={src.desktop}>
    <source media="(min-width: 768px)" srcset={src.tablet}>
    <img 
      src={src.mobile} 
      alt={alt} 
      loading={priority ? 'eager' : loading}
    />
  </picture>
) : (
  <img 
    src={src} 
    alt={alt} 
    loading={priority ? 'eager' : loading}
    class={className}
  />
)}
```

## 🎨 Icon Management

### SVG Icons
- **Location**: `/assets/shared/desktop/` for main icons
- **Inline SVGs**: For small, frequently used icons
- **External SVGs**: For larger, less critical icons

### Icon Component Pattern
```astro
---
interface IconProps {
  name: 'cart' | 'logo' | 'check' | 'arrow';
  size?: number;
  className?: string;
}

const { name, size = 24, className } = Astro.props;

const iconPaths = {
  cart: '/assets/shared/desktop/icon-cart.svg',
  logo: '/assets/shared/desktop/logo.svg',
  check: '/assets/checkout/icon-order-confirmation.svg',
  // ... other icons
};
---

<img 
  src={iconPaths[name]} 
  alt={`${name} icon`}
  width={size}
  height={size}
  class={className}
/>
```

## 🚀 Performance Best Practices

### Asset Delivery
1. **CDN Integration**: Consider using a CDN for static assets
2. **Compression**: Enable gzip/brotli compression for all assets
3. **Caching**: Set appropriate cache headers for static assets
4. **Minification**: Optimize SVGs and compress images

### Build-Time Optimization
1. **Image Processing**: Implement build-time image optimization
2. **Format Conversion**: Generate WebP/AVIF versions automatically
3. **Responsive Generation**: Auto-generate responsive image variants
4. **Asset Bundling**: Bundle and optimize CSS/JS assets

### Runtime Performance
1. **Lazy Loading**: Implement for below-the-fold images
2. **Progressive Loading**: Show placeholders while images load
3. **Error Handling**: Provide fallback images for failed loads
4. **Intersection Observer**: Use for advanced lazy loading scenarios

### Accessibility
1. **Alt Text**: Provide meaningful alt text for all images
2. **Focus States**: Ensure interactive images have focus indicators
3. **Screen Readers**: Use appropriate ARIA labels when needed
4. **Color Contrast**: Ensure sufficient contrast in image overlays